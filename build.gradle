buildscript {
	repositories {
		jcenter()
		maven { url = "https://files.minecraftforge.net/maven" }
		maven { url = "https://repo.spongepowered.org/maven" }
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
		classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
	}
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = "1.1.1"
def modName = "ReplayAddon".toString()
def modId = modName.toLowerCase()
group = "nessiesson.${modId}"
def loadingPlugin = "${group}.LoadingPlugin"
archivesBaseName = modId
boolean isObfuscated = project.gradle.startParameter.taskNames.contains("build")

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

jar.manifest.attributes(
		"FMLCorePluginContainsFMLMod": true,
		"FMLCorePlugin": loadingPlugin,
		"ForceLoadAsMod": true,
		"TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
)

minecraft {
	version = "1.12.2-14.23.5.2847"
	runDir = "run"
	mappings = "stable_39"
	coreMod = loadingPlugin

	replace "@VERSION@", project.version
	replace "@MODNAME@", modName
	replace "@MODID@", modId
	replace "@DEPENDENCIES@", isObfuscated ? "required-after:replaymod" : ""

	def args = [
			"-Dmixin.debug=true"
	]
	clientJvmArgs.addAll(args)
	serverJvmArgs.addAll(args)
}

repositories {
	maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
	compile("org.spongepowered:mixin:0.7.5-SNAPSHOT") {
		exclude module: "asm-commons"
		exclude module: "asm-tree"
		exclude module: "launchwrapper"
		exclude module: "guava"
		exclude module: "log4j-core"
		exclude module: "gson"
		exclude module: "commons-io"
	}
}

mixin.add sourceSets.main, "mixins.replayaddon.refmap.json"

processResources {
	inputs.property "modName", modName
	inputs.property "modId", modId
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"

		expand "version": project.version, "mcversion": project.minecraft.version, "modName": modName, "modId": modId
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}
